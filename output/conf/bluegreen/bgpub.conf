lua_shared_dict dict_rule_data 16m;

init_by_lua '
    package.path = string.format("$s;./lua/com/qtj/bgpub/?.lua;./lua/lib/?.lua;./lua/conf/?.lua;", package.path)
    cjson = require "cjson"
    lua_code_cache = on
';

server {
    listen 8899;
    server_name  localhost;

    location = /favicon.ico {
            log_not_found off;
            access_log off;
    }

    location /bgpub/echo {
    	echo "bgpub";
    }

    location /bgpub/content_lua {
        content_by_lua_block {
            ngx.say("content: " .. package.path)
        }
    }

    location /bgpub/getservice {
        content_by_lua_block {
            local redis = require("dal.redis_dal")
            local result = redis.conn()
            ngx.say("result: " .. result)
            ngx.say("done")
        }
    }

    location /bgpub/redis {
        content_by_lua_block {
            local redis = require("api.redis_api")
            local redis_conn = redis.redisconn()
            ngx.say("done")
        }
    }

    location /bgpub/ruleset {
        set $service_name $arg_service;
        content_by_lua_block {
            --local s_key = ngx.var.service_name
            --local conf = {["s_key"] = s_key }
            --ngx.say("result: " .. cjson.encode(conf))

            local bluegreen_api = require("api.bluegreen_api")
            local conf = {"s_key" = s_key}
            local result = bluegreen_api:ruleset(conf)
            ngx.say("result: " .. result)
        }

    }

    location /bgpub/get/all {
        content_by_lua '
            local rule_data_cache = ngx.shared["dict_rule_data"]
            local switch_keys = rule_data_cache:get_keys(100)  
            local result = {} 
            for k, v in ipairs(switch_keys) do       
                result[v] = bizgray_cache:get(v)
            end
            ngx.print(cjson.encode(result))
        ';
    }
}